# Generated by Django 3.2.18 on 2023-05-14 21:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lands', '0039_auto_20230419_1753'),
        ('places', '0006_auto_20221127_0042'),
    ]

    operations = [
        migrations.CreateModel(
            name='AplicationType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='descripcion', max_length=50, null=True)),
            ],
            options={
                'db_table': 'TIPO_SOLICITUD',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True, db_column='fecha', null=True)),
                ('id_status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Por atender'), (2, 'Atendido'), (3, 'Observado')], db_column='estado', null=True)),
                ('id_type', models.ForeignKey(blank=True, db_column='tipo', null=True, on_delete=django.db.models.deletion.SET_NULL, to='maintenance.aplicationtype')),
                ('ubigeo', models.ForeignKey(blank=True, db_column='ubigeo', null=True, on_delete=django.db.models.deletion.SET_NULL, to='places.district')),
                ('usermane', models.ForeignKey(blank=True, db_column='username', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'SOLICITUD',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cpm', models.CharField(blank=True, db_column='cod_pre', max_length=15, null=True)),
                ('source', models.CharField(blank=True, choices=[('carga_masiva', 'Carga Masiva'), ('asignar_lote', 'Asignar Lote'), ('asignar_img', 'Asignar Imagen')], db_column='origen', max_length=50, null=True)),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Sin Cartografia'), (1, 'Con cartografia (Lote)'), (2, 'Con cartografia (Imagen)'), (3, 'Inactivo')], db_column='estado', default=0, null=True)),
                ('id_land_cartographic', models.CharField(blank=True, db_column='id_predio_cartografico', help_text='id land cartographic', max_length=18, null=True)),
                ('id_plot', models.CharField(blank=True, db_column='id_lote', help_text='id plot', max_length=25, null=True)),
                ('id_cartographic_img', models.CharField(blank=True, db_column='id_imagen_cartografica', help_text='id cartographic image', max_length=26, null=True)),
                ('id_object_img', models.IntegerField(blank=True, db_column='id_imagen_objeto', help_text='id object image', null=True)),
                ('sec_ejec', models.CharField(blank=True, db_column='sec_ejec', max_length=6, null=True)),
                ('cup', models.CharField(blank=True, db_column='cod_cpu', max_length=20, null=True)),
                ('cod_sect', models.CharField(blank=True, db_column='cod_sect', max_length=2, null=True)),
                ('cod_uu', models.CharField(blank=True, db_column='cod_uu', max_length=4, null=True)),
                ('cod_mzn', models.CharField(blank=True, db_column='cod_mzn', max_length=3, null=True)),
                ('cod_land', models.CharField(blank=True, db_column='cod_lote', max_length=5, null=True)),
                ('cod_cuc', models.CharField(blank=True, db_column='cod_cuc', max_length=18, null=True)),
                ('uu_type', models.CharField(blank=True, db_column='tipo_uu', max_length=2, null=True)),
                ('habilitacion_name', models.CharField(blank=True, db_column='nom_uu', max_length=255, null=True)),
                ('reference_name', models.CharField(blank=True, db_column='nom_ref', max_length=255, null=True)),
                ('urban_mza', models.CharField(blank=True, db_column='mzn_urb', max_length=10, null=True)),
                ('urban_lot_number', models.CharField(blank=True, db_column='lot_urb', max_length=10, null=True)),
                ('cod_street', models.CharField(blank=True, db_column='cod_via', max_length=20, null=True)),
                ('street_type', models.CharField(blank=True, db_column='tip_via', max_length=20, null=True)),
                ('street_name', models.CharField(blank=True, db_column='nom_via', max_length=255, null=True)),
                ('street_name_alt', models.CharField(blank=True, db_column='nom_alt', max_length=255, null=True)),
                ('municipal_number', models.CharField(blank=True, db_column='num_mun', max_length=6, null=True)),
                ('block', models.CharField(blank=True, db_column='block', max_length=6, null=True)),
                ('indoor', models.CharField(blank=True, db_column='interior', max_length=5, null=True)),
                ('floor', models.CharField(blank=True, db_column='piso', max_length=2, null=True)),
                ('km', models.CharField(blank=True, db_column='km', max_length=4, null=True)),
                ('landmark', models.CharField(blank=True, db_column='referencia', max_length=250, null=True)),
                ('municipal_address', models.CharField(blank=True, db_column='dir_mun', max_length=255, null=True)),
                ('urban_address', models.CharField(blank=True, db_column='dir_urb', max_length=255, null=True)),
                ('assigned_address', models.CharField(blank=True, db_column='dir_asig', max_length=255, null=True)),
                ('longitude', models.FloatField(blank=True, db_column='coor_x', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='coor_y', null=True)),
                ('id_aranc', models.IntegerField(blank=True, db_column='id_aranc', null=True)),
                ('status_img', models.PositiveSmallIntegerField(blank=True, db_column='estado_imagen', null=True)),
                ('land_area', models.FloatField(blank=True, db_column='area_terreno', null=True)),
                ('front_length', models.FloatField(blank=True, db_column='longitud_frente', null=True)),
                ('location_park', models.CharField(blank=True, db_column='ubicacion_parque', max_length=250, null=True)),
                ('group_use_desc', models.CharField(blank=True, db_column='grupo_uso_desc', max_length=50, null=True)),
                ('number_inhabitants', models.IntegerField(blank=True, db_column='cantidad_habitantes', null=True)),
                ('classification_land_desc', models.CharField(blank=True, db_column='clasificacion_predio_desc', max_length=90, null=True)),
                ('build_status_desc', models.CharField(blank=True, db_column='estado_construccion_desc', max_length=120, null=True)),
                ('property_type', models.CharField(blank=True, db_column='tipo_predio', max_length=20, null=True)),
                ('self_assessment_total', models.FloatField(blank=True, db_column='autoavaluo_total', null=True)),
                ('condominium', models.FloatField(blank=True, db_column='condominio', null=True)),
                ('deduction', models.FloatField(blank=True, db_column='deduccion', null=True)),
                ('self_assessment_affection', models.FloatField(blank=True, db_column='autoavaluo_afecto', null=True)),
                ('source_information', models.CharField(blank=True, db_column='fuente', max_length=255, null=True)),
                ('resolution_type', models.CharField(blank=True, db_column='tdoc_res', max_length=2, null=True)),
                ('resolution_document', models.CharField(blank=True, db_column='ndoc_res', max_length=255, null=True)),
                ('apartment_number', models.CharField(blank=True, db_column='numero_departamento', max_length=20, null=True)),
                ('site', models.IntegerField(blank=True, db_column='lugar', null=True)),
                ('built_area', models.FloatField(blank=True, db_column='area_construida', null=True)),
                ('ubigeo', models.ForeignKey(db_column='ubigeo', on_delete=django.db.models.deletion.CASCADE, to='places.district')),
            ],
            options={
                'verbose_name': 'Result Detail',
                'verbose_name_plural': 'Results Detail',
                'db_table': 'RESULTADO',
            },
        ),
        migrations.CreateModel(
            name='ApplicationResultDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application', models.ForeignKey(db_column='id_solicitud', on_delete=django.db.models.deletion.CASCADE, to='maintenance.application')),
                ('result', models.ForeignKey(db_column='id_resultado', on_delete=django.db.models.deletion.CASCADE, to='maintenance.result')),
            ],
            options={
                'verbose_name': 'Application Result Detail',
                'verbose_name_plural': 'Applications Result Detail',
                'db_table': 'SOLICITUD_RESULTADO',
            },
        ),
        migrations.CreateModel(
            name='ApplicationObservationDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, db_column='descripcion', max_length=250, null=True)),
                ('img', models.ImageField(db_column='img', upload_to='observacion/')),
                ('application', models.ForeignKey(db_column='id_solicitud', on_delete=django.db.models.deletion.CASCADE, to='maintenance.application')),
            ],
            options={
                'verbose_name': 'Application Observation Detail',
                'verbose_name_plural': 'Applications Observation Detail',
                'db_table': 'SOLICITUD_OBSERVACION',
            },
        ),
        migrations.CreateModel(
            name='ApplicationLandDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application', models.ForeignKey(db_column='id_solicitud', on_delete=django.db.models.deletion.CASCADE, related_name='toapplication', to='maintenance.application')),
                ('land', models.ForeignKey(db_column='id_predio', on_delete=django.db.models.deletion.CASCADE, related_name='toland', to='lands.land')),
            ],
            options={
                'verbose_name': 'Application Land Detail',
                'verbose_name_plural': 'Applications Land Detail',
                'db_table': 'SOLICITUD_PREDIO',
            },
        ),
    ]
